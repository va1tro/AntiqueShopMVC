@using AntiqueShopMVC.Models
@model List<Item>

@{
    ViewBag.Title = "Административная панель";
    Layout = null; // Или _Layout, если используется
    var categories = ViewBag.Categories as List<Category> ?? new List<Category>();
    string currentSearch = ViewBag.CurrentSearch as string ?? "";
    string currentCategory = ViewBag.CurrentCategory as string ?? "";
    string currentSort = ViewBag.CurrentSort as string ?? "";
}

@functions {
    public string GetImagePath(string fileName)
    {
        return string.IsNullOrWhiteSpace(fileName)
            ? "/images/picture.jpg"
            : $"/images/{fileName}";
    }
}

<!-- Уведомления -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert success">@TempData["SuccessMessage"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert error">@TempData["Error"]</div>
}

<style>
    @@keyframes fadeOut {
        0% {
            opacity: 1;
        }

        80% {
            opacity: 1;
        }

        100% {
            opacity: 0;
            display: none;
        }
    }

    .alert {
        max-width: 800px;
        margin: 10px auto;
        padding: 12px 20px;
        border-radius: 8px;
        font-weight: bold;
        text-align: center;
        animation: fadeOut 3s forwards;
    }

        .alert.success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert.info {
            background-color: #fff3cd;
            color: #856404;
            border: 1px solid #ffeeba;
        }

        .alert.error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

    .menu {
        background: #D9C7A7;
        padding: 10px;
        border-bottom: 1px solid #8B5E3C;
        display: flex;
        justify-content: center;
        gap: 15px;
    }

        .menu a {
            padding: 8px 16px;
            border: 1px solid #8B5E3C;
            border-radius: 8px;
            background: white;
            color: #8B5E3C;
            text-decoration: none;
            font-weight: bold;
            transition: 0.2s;
        }

            .menu a:hover {
                background-color: #e0c4a8;
            }

    body {
        background-color: #EEE0CB;
        font-family: Arial, sans-serif;
    }

    .items {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        padding: 20px;
        justify-content: center;
    }

    .card {
        width: 280px;
        height: 480px;
        background: white;
        border: 1px solid #A58B5F;
        border-radius: 10px;
        padding: 15px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        cursor: pointer;
        transition: transform 0.2s;
        position: relative;
    }

        .card:hover {
            transform: translateY(-5px);
        }

        .card img {
            width: 100%;
            height: 180px;
            object-fit: cover;
            border-radius: 5px;
            margin-bottom: 10px;
        }

    .name {
        font-size: 18px;
        font-weight: bold;
        text-align: center;
        margin: 5px 0;
    }

    .info {
        font-size: 14px;
        margin: 2px 0;
    }

    .price {
        font-weight: bold;
        margin-top: 10px;
        font-size: 16px;
        color: #8B5E3C;
    }

    .actions {
        display: flex;
        justify-content: center;
        gap: 10px;
        margin-top: 10px;
    }

        .actions button {
            background: #EEE0CB;
            border: 1px solid #8B5E3C;
            color: #8B5E3C;
            border-radius: 8px;
            padding: 8px 10px;
            font-size: 16px;
            cursor: pointer;
        }

            .actions button:hover {
                background-color: #e0c4a8;
            }

    .filters {
        background: #D9C7A7;
        padding: 10px;
        display: flex;
        gap: 10px;
        justify-content: center;
        flex-wrap: wrap;
    }

        .filters select,
        .filters input[type="text"],
        .filters button {
            padding: 8px;
            border: 1px solid #8B5E3C;
            border-radius: 8px;
            font-size: 14px;
            min-width: 180px;
        }

        .filters button {
            background-color: #8B5E3C;
            color: white;
            font-weight: bold;
            cursor: pointer;
        }

    .admin-actions {
        position: absolute;
        top: 10px;
        right: 10px;
        display: flex;
        gap: 5px;
    }

        .admin-actions button {
            background: #8B5E3C;
            color: white;
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 14px;
        }

    .counter {
        text-align: center;
        padding: 10px;
        color: #8B5E3C;
        font-weight: bold;
    }
</style>

<!-- Верхнее меню -->
<div class="menu">
    <a href="/Admin/ItemLogs">📝 Все журналы</a>
    <a href="/Admin/UserInfo">👤 Личные данные</a>
    <a href="/Account/Logout">⛔ Выход</a>
</div>

<!-- Фильтры -->
<form id="filterForm" method="get" class="filters">
    <select name="category" onchange="submitForm()">
        <option value="">Все категории</option>
        @foreach (var c in categories)
        {
            <option value="@c.IdCategory" selected="@(c.IdCategory.ToString() == currentCategory ? "selected" : null)">
                @c.NameCategory
            </option>
        }
    </select>

    <select name="sort" onchange="submitForm()">
        <option value="">Без сортировки</option>
        <option value="year_asc" selected="@(currentSort == "year_asc" ? "selected" : null)">Год ↑</option>
        <option value="year_desc" selected="@(currentSort == "year_desc" ? "selected" : null)">Год ↓</option>
        <option value="price_asc" selected="@(currentSort == "price_asc" ? "selected" : null)">Цена ↑</option>
        <option value="price_desc" selected="@(currentSort == "price_desc" ? "selected" : null)">Цена ↓</option>
        <option value="arrival_new" selected="@(currentSort == "arrival_new" ? "selected" : null)">Новые</option>
        <option value="arrival_old" selected="@(currentSort == "arrival_old" ? "selected" : null)">Старые</option>
    </select>

    <input type="text" name="search" placeholder="Поиск..." value="@currentSearch" oninput="delayedSubmit()" />

    <button type="button" onclick="location.href='/Admin/AddEditItem'">Добавить товар</button>
    <button type="button" onclick="exportToExcel()">Экспорт в Excel</button>
</form>

<div class="counter">
    Найдено товаров: @Model.Count
</div>

<!-- Карточки товаров -->
<div class="items">
    @foreach (var item in Model)
    {
        <div class="card">
            <div class="admin-actions">
                <form asp-action="DeleteItem" asp-controller="Admin" method="post" onsubmit="return confirm('Удалить товар?');">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@item.IdItem" />
                    <button type="submit">🗑️</button>
                </form>
                <button onclick="location.href='@Url.Action("AddEditItem", "Admin", new { id = item.IdItem })'">✏️</button>
                <button onclick="location.href='@Url.Action("ItemLogs", "Admin", new { id = item.IdItem })'">📝</button>
            </div>

            <img src="@GetImagePath(item.Image)" alt="Фото" onclick="location.href='@Url.Action("Details", "Admin", new { id = item.IdItem })'" />
            <div class="name">@item.NameItem</div>
            <div class="info">Год: @item.Year</div>
            <div class="info">Состояние: @item.Condition</div>
            <div class="info">Подлинность: @item.Authenticity</div>
            <div class="price">Цена: @item.SellingPrice руб.</div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function submitForm() {
            document.getElementById("filterForm").submit();
        }

        let timer;
        function delayedSubmit() {
            clearTimeout(timer);
            timer = setTimeout(() => {
                submitForm();
            }, 600);
        }

        function exportToExcel() {
        const form = document.getElementById("filterForm");
        const url = new URL('/Admin/ExportToCsv', window.location.origin);

        for (const el of form.elements) {
            if (el.name && el.value)
                url.searchParams.set(el.name, el.value);
        }

        window.location.href = url.toString(); // Перейти по URL для скачивания
    }
    </script>
}